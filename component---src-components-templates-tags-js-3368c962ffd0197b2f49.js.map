{"version":3,"sources":["webpack:///./src/components/templates/Tags.js"],"names":["TagsWrapper","styled","div","color","contentBackground","boxShadow","Tags","data","pageContext","location","blogPost","allMarkdownRemark","edges","url","site","siteMetadata","siteUrl","tag","title","description","pathname","map","i","node","console","table","to","fields","slug","key","frontmatter","date","query"],"mappings":"4FAAA,uJAQMA,EAAcC,IAAOC,IAAV,uEAAGD,CAAH,mGACDE,IAAMC,kBACNC,KAwCDC,UAhCf,YAAgD,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,SAC3BC,EAAWH,EAAKI,kBAAkBC,MAClCC,EAAMN,EAAKO,KAAKC,aAAaC,QAC3BC,EAAQT,EAARS,IAER,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAOD,EACPE,YAAW,0BAA4BF,EACvCJ,IAAKA,EACLO,SAAUX,EAASW,WAGrB,kBAACpB,EAAD,KACE,kDAA2BiB,GAE3B,6BACGP,EAASW,KAAI,WAAWC,GAAO,IAAfC,EAAc,EAAdA,KAEf,OADAC,QAAQC,MAAMF,GAEZ,kBAAC,OAAD,CAAMG,GAAE,IAAMH,EAAKI,OAAOC,KAAQC,IAAKP,GACpCC,EAAKO,YAAYC,KADpB,MAC6BR,EAAKO,YAAYZ,cAYrD,IAAMc,EAAK","file":"component---src-components-templates-tags-js-3368c962ffd0197b2f49.js","sourcesContent":["import color from \"../../utils/color\"\nimport React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../partials/Layout\"\nimport Metatags from \"../partials/MetaTags\"\nimport styled from \"styled-components\"\nimport { boxShadow } from \"../partials/GlobalStyle\"\n\nconst TagsWrapper = styled.div`\n  background: ${color.contentBackground};\n  box-shadow: ${boxShadow};\n\n  display: flex;\n  flex-direction: column;\n  padding: 1.5rem;\n  margin: 1.5rem;\n`\n\nfunction Tags({ data, pageContext, location }) {\n  const blogPost = data.allMarkdownRemark.edges\n  const url = data.site.siteMetadata.siteUrl\n  const { tag } = pageContext\n\n  return (\n    <Layout>\n      <Metatags\n        title={tag}\n        description={`list of blogs with tag ${tag}`}\n        url={url}\n        pathname={location.pathname}\n      />\n\n      <TagsWrapper>\n        <h1>{`Available posts in ${tag}`}</h1>\n\n        <div>\n          {blogPost.map(({ node }, i) => {\n            console.table(node)\n            return (\n              <Link to={`/${node.fields.slug}`} key={i}>\n                {node.frontmatter.date} - {node.frontmatter.title}\n              </Link>\n            )\n          })}\n        </div>\n      </TagsWrapper>\n    </Layout>\n  )\n}\n\nexport default Tags\n\nexport const query = graphql`\n  query TagsQuery($tag: String!) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { eq: $tag } } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            date(formatString: \"YYYY/MM/DD\")\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        siteUrl\n      }\n    }\n  }\n`\n"],"sourceRoot":""}