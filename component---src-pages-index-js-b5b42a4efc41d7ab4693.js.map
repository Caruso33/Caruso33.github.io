{"version":3,"sources":["webpack:///./src/components/pages/home/styled.js","webpack:///./src/components/pages/home/BlogItem.js","webpack:///./src/pages/index.js"],"names":["BlogItems","styled","ol","BlogListItem","li","color","contentBackground","boxShadow","BlogTitle","Title","attrs","level","BlogImage","img","ImageExcerptWrapper","div","hasImage","DateNTags","ExcerptNReadFull","BlogExcerpt","Paragraph","ellipsis","rows","ReadFull","Link","BlogItem","node","blogUrl","fields","slug","frontmatter","title","date","tags","image","imageUrl","thumbnail","childImageSharp","resize","src","map","topic","Mapping","mapTopicToImage","key","to","excerpt","Home","data","location","Layout","description","url","site","siteMetadata","siteUrl","pathname","allMarkdownRemark","edges","pageQuery"],"mappings":"uSAMaA,EAAYC,IAAOC,GAAV,wEAAGD,CAAH,sBAITE,EAAeF,IAAOG,GAAV,2EAAGH,CAAH,mIAGTI,IAAMC,kBAKJC,KAILC,EAAYP,YAAO,IAAWQ,OAAOC,OAAM,iBAAO,CAC7DC,MAAO,MADa,wEAAGV,CAAH,MAITW,EAAYX,IAAOY,IAAV,wEAAGZ,CAAH,oCAKTa,EAAsBb,IAAOc,IAAV,kFAAGd,CAAH,8BACpB,qBAAGe,SAA2B,QAAU,UAIvCC,EAAYhB,IAAOc,IAAV,wEAAGd,CAAH,iDAKTiB,EAAmBjB,IAAOc,IAAV,+EAAGd,CAAH,kFAOhBkB,EAAclB,YAAO,IAAWmB,WAAWV,OAAM,iBAAO,CACnEW,SAAU,CAAEC,KAAM,OADI,0EAAGrB,CAAH,wCAQXsB,EAAWtB,YAAOuB,QAAV,uEAAGvB,CAAH,4C,YCzCN,SAASwB,EAAT,GAA6B,IAATC,EAAQ,EAARA,KAC3BC,EAAO,IAAOD,EAAKE,OAAOC,KADS,EAGMH,EAAKI,YAA5CC,EAHiC,EAGjCA,MAAOC,EAH0B,EAG1BA,KAAMC,EAHoB,EAGpBA,KAAMC,EAHc,EAGdA,MAAOC,EAHO,EAGPA,SAC5BnB,EAAWkB,GAASC,EACpBC,EAAYF,GAASA,EAAMG,gBAAgBC,OAAOC,IAExD,OACE,kBAACpC,EAAD,KACE,oCACE,kBAACc,EAAD,KACE,2BAAIe,GACJ,4BACIC,GAAQ,IAAIO,KAAI,SAAAC,GAChB,IAAMC,EAAUC,YAAgBF,GAEhC,OACE,uBAAKG,IAAKH,GACPC,GAAW,kBAACA,EAAD,MADd,IAC4BD,QAOpC,kBAAC,OAAD,CAAMI,GAAIlB,GACR,kBAACnB,EAAD,KAAYuB,IAGd,kBAACjB,EAAD,CAAqBE,WAAYA,GAC9BA,GAAY,kBAACJ,EAAD,CAAW2B,IAAKH,GAAwBD,IAErD,kBAACjB,EAAD,KACE,kBAACC,EAAD,KAAcO,EAAKoB,SAEnB,kBAACvB,EAAD,CAAUsB,GAAIlB,GAAd,4BCxBGoB,UAnBF,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACpB,OACE,kBAACC,EAAA,EAAW,CAAED,YACZ,kBAAC,IAAD,CACElB,MAAO,gBACPoB,YAAa,iCACbC,IAAKJ,EAAKK,KAAKC,aAAaC,QAC5BC,SAAUP,EAASO,WAGrB,kBAACxD,EAAD,KACGgD,EAAKS,kBAAkBC,MAAMlB,KAAI,YAAe,IAAZd,EAAW,EAAXA,KACnC,OAAO,kBAACD,EAAD,CAAUmB,IAAKlB,EAAKI,YAAYC,MAAOL,KAAMA,UAZ9D,IAqBaiC,EAAS","file":"component---src-pages-index-js-b5b42a4efc41d7ab4693.js","sourcesContent":["import styled from \"styled-components\"\nimport color from \"../../../utils/color\"\nimport { Typography } from \"antd\"\nimport { Link } from \"gatsby\"\nimport { boxShadow } from \"../../partials/GlobalStyle\"\n\nexport const BlogItems = styled.ol`\n  list-style: none;\n`\n\nexport const BlogListItem = styled.li`\n  padding: 1.5rem;\n  margin: 1.5rem;\n  background: ${color.contentBackground};\n\n  transition: box-shadow 0.5s cubic-bezier(0.22, 0.61, 0.36, 1);\n\n  &:hover {\n    box-shadow: ${boxShadow};\n  }\n`\n\nexport const BlogTitle = styled(Typography.Title).attrs(() => ({\n  level: 2\n}))``\n\nexport const BlogImage = styled.img`\n  height: 100%;\n  margin-right: 2rem;\n`\n\nexport const ImageExcerptWrapper = styled.div`\n  height: ${({ hasImage }) => (hasImage ? \"13rem\" : \"7rem\")};\n  display: flex;\n`\n\nexport const DateNTags = styled.div`\n  display: flex;\n  justify-content: space-between;\n`\n\nexport const ExcerptNReadFull = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nexport const BlogExcerpt = styled(Typography.Paragraph).attrs(() => ({\n  ellipsis: { rows: 3 }\n}))`\n  &.ant-typography {\n    margin-bottom: 0;\n  }\n`\n\nexport const ReadFull = styled(Link)`\n  display: inline-block;\n  margin-left: auto;\n`\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport {\n  BlogListItem,\n  BlogImage,\n  ImageExcerptWrapper,\n  DateNTags,\n  BlogTitle,\n  BlogExcerpt,\n  ReadFull,\n  ExcerptNReadFull\n} from \"./styled\"\nimport { mapTopicToImage } from \"./mapTopicToImage\"\nimport { Tag } from \"antd\"\n\nexport default function BlogItem({ node }) {\n  const blogUrl = `/${node.fields.slug}`\n\n  const { title, date, tags, image, imageUrl } = node.frontmatter\n  const hasImage = image || imageUrl\n  const thumbnail = image && image.childImageSharp.resize.src\n\n  return (\n    <BlogListItem>\n      <>\n        <DateNTags>\n          <p>{date}</p>\n          <p>\n            {(tags || []).map(topic => {\n              const Mapping = mapTopicToImage(topic)\n\n              return (\n                <Tag key={topic}>\n                  {Mapping && <Mapping />} {topic}\n                </Tag>\n              )\n            })}\n          </p>\n        </DateNTags>\n\n        <Link to={blogUrl}>\n          <BlogTitle>{title}</BlogTitle>\n        </Link>\n\n        <ImageExcerptWrapper hasImage={!!hasImage}>\n          {hasImage && <BlogImage src={thumbnail ? thumbnail : imageUrl} />}\n\n          <ExcerptNReadFull>\n            <BlogExcerpt>{node.excerpt}</BlogExcerpt>\n\n            <ReadFull to={blogUrl}>...read full article</ReadFull>\n          </ExcerptNReadFull>\n        </ImageExcerptWrapper>\n      </>\n    </BlogListItem>\n  )\n}\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\nimport Layout from \"../components/partials/Layout\"\nimport Metatags from \"../components/partials/MetaTags\"\nimport BlogItem from \"../components/pages/home/BlogItem\"\nimport { BlogItems } from \"../components/pages/home/styled\"\n\nconst Home = ({ data, location }) => {\n  return (\n    <Layout {...{ location }}>\n      <Metatags\n        title={\"Tobias Leinss\"}\n        description={\"personal details and blog list\"}\n        url={data.site.siteMetadata.siteUrl}\n        pathname={location.pathname}\n      />\n\n      <BlogItems>\n        {data.allMarkdownRemark.edges.map(({ node }) => {\n          return <BlogItem key={node.frontmatter.title} node={node} />\n        })}\n      </BlogItems>\n    </Layout>\n  )\n}\n\nexport default Home\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"DD. MMMM, YYYY\")\n            image {\n              childImageSharp {\n                resize(width: 200, height: 130) {\n                  src\n                }\n              }\n            }\n            imageUrl\n            tags\n          }\n          excerpt(pruneLength: 350)\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        siteUrl\n      }\n    }\n  }\n`\n"],"sourceRoot":""}