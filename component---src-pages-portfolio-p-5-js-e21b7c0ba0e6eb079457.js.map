{"version":3,"sources":["webpack:///./node_modules/lodash/isSymbol.js","webpack:///./node_modules/lodash/_unicodeToArray.js","webpack:///./node_modules/lodash/_createCaseFirst.js","webpack:///./node_modules/lodash/capitalize.js","webpack:///./node_modules/lodash/_getRawTag.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.date.to-string.js","webpack:///./node_modules/lodash/_stringToArray.js","webpack:///./node_modules/lodash/isObjectLike.js","webpack:///./node_modules/lodash/_objectToString.js","webpack:///./node_modules/lodash/_baseSlice.js","webpack:///./node_modules/lodash/_root.js","webpack:///./node_modules/lodash/_baseGetTag.js","webpack:///./node_modules/lodash/_freeGlobal.js","webpack:///./node_modules/lodash/isArray.js","webpack:///./node_modules/lodash/_asciiToArray.js","webpack:///./node_modules/lodash/toString.js","webpack:///./node_modules/lodash/_arrayMap.js","webpack:///./src/pages/portfolio/P5.js","webpack:///./node_modules/lodash/upperFirst.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.regexp.constructor.js","webpack:///./node_modules/lodash/_Symbol.js","webpack:///./node_modules/lodash/_hasUnicode.js","webpack:///./node_modules/lodash/_castSlice.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/lodash/_baseToString.js"],"names":["baseGetTag","isObjectLike","module","exports","value","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsSeq","join","rsSymbol","reUnicode","RegExp","string","match","castSlice","hasUnicode","stringToArray","toString","methodName","strSymbols","undefined","chr","charAt","trailing","slice","upperFirst","toLowerCase","Symbol","objectProto","Object","prototype","hasOwnProperty","nativeObjectToString","symToStringTag","toStringTag","isOwn","call","tag","unmasked","e","result","DateProto","Date","$toString","getTime","NaN","this","asciiToArray","unicodeToArray","array","start","end","index","length","Array","freeGlobal","freeSelf","self","root","Function","getRawTag","objectToString","global","isArray","split","baseToString","iteratee","P5","createCaseFirst","inheritIfRequired","dP","f","gOPN","isRegExp","$flags","$RegExp","Base","proto","re1","re2","CORRECT_NEW","p","tiRE","piRE","fiU","constructor","source","proxy","key","configurable","get","set","it","keys","i","reHasUnicode","test","baseSlice","g","window","arrayMap","isSymbol","symbolProto","symbolToString"],"mappings":"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","file":"component---src-pages-portfolio-p-5-js-e21b7c0ba0e6eb079457.js","sourcesContent":["var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","require(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = \"\\\\ud800-\\\\udfff\",\n    rsComboMarksRange = \"\\\\u0300-\\\\u036f\",\n    reComboHalfMarksRange = \"\\\\ufe20-\\\\ufe2f\",\n    rsComboSymbolsRange = \"\\\\u20d0-\\\\u20ff\",\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = \"\\\\ufe0e\\\\ufe0f\";\n/** Used to compose unicode capture groups. */\n\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = \"\\\\ud83c[\\\\udffb-\\\\udfff]\",\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = \"(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}\",\n    rsSurrPair = \"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\",\n    rsZWJ = \"\\\\u200d\";\n/** Used to compose unicode regexes. */\n\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\n\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;","var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\n\n\nfunction createCaseFirst(methodName) {\n  return function (string) {\n    string = toString(string);\n    var strSymbols = hasUnicode(string) ? stringToArray(string) : undefined;\n    var chr = strSymbols ? strSymbols[0] : string.charAt(0);\n    var trailing = strSymbols ? castSlice(strSymbols, 1).join('') : string.slice(1);\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;","var toString = require('./toString'),\n    upperFirst = require('./upperFirst');\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\n\n\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\nmodule.exports = capitalize;","require(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nvar Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","var DateProto = Date.prototype;\nvar INVALID_DATE = 'Invalid Date';\nvar TO_STRING = 'toString';\nvar $toString = DateProto[TO_STRING];\nvar getTime = DateProto.getTime;\nif (new Date(NaN) + '' != INVALID_DATE) {\n  require('./_redefine')(DateProto, TO_STRING, function toString() {\n    var value = getTime.call(this);\n    // eslint-disable-next-line no-self-compare\n    return value === value ? $toString.call(this) : INVALID_DATE;\n  });\n}\n","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\n\n\nfunction stringToArray(string) {\n  return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","require(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : length + start;\n  }\n\n  end = end > length ? length : end;\n\n  if (end < 0) {\n    end += length;\n  }\n\n  length = start > end ? 0 : end - start >>> 0;\n  start >>>= 0;\n  var result = Array(length);\n\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n\n  return result;\n}\n\nmodule.exports = baseSlice;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","require(\"core-js/modules/es6.array.is-array\");\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","require(\"core-js/modules/es6.regexp.split\");\n\n/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","// import { Radio } from \"antd\"\nimport _capitalize from \"lodash/capitalize\"\n// import p5 from \"p5\"\nimport React from \"react\"\n// import playground from \"../../components/pages/portfolio/p5/playground\"\n// import snake from \"../../components/pages/portfolio/p5/snake\"\n// import Layout from \"../../components/partials/Layout\"\n// import getWindowDimensions from \"../../components/utils/useWindowDimensions\"\n// import usePrevious from \"../../components/utils/usePrevious\"\n\nexport default function P5() {\n  // if (typeof window === `undefined`) {\n  //   return () => {}\n  // }\n\n  // const windowDim = getWindowDimensions()\n\n  // const p5Options = [\"snake\", \"playground\"]\n\n  // const [option, setOption] = React.useState(p5Options[0])\n\n  // const p5DivRef = React.useRef()\n  // const sketchRef = React.useRef()\n\n  // const prevOption = usePrevious(option)\n  // React.useEffect(() => {\n  //   if (!sketchRef.current || (prevOption && option && prevOption !== option)) {\n  //     if (sketchRef.current) {\n  //       sketchRef.current.remove()\n  //     }\n\n  //     sketchRef.current = new p5(p5Sketch, p5DivRef.current)\n  //   }\n\n  //   if (sketchRef.current) return sketchRef.current.remove\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, [p5Sketch, option])\n\n  // function p5Sketch(sketch) {\n  //   const canvasDim = {\n  //     width: windowDim.width > 1100 ? 800 : windowDim.width - 250,\n  //     height: Math.min(500, windowDim.height)\n  //   }\n\n  //   let extraCanvas\n\n  //   sketch.setup = () => {\n  //     sketch.createCanvas(canvasDim.width, canvasDim.height)\n\n  //     extraCanvas = sketch.createGraphics(canvasDim.width, canvasDim.height)\n  //     extraCanvas.clear()\n  //   }\n\n  //   sketch.draw = () => {\n  //     switch (option) {\n  //       case \"playground\":\n  //         playground(sketch, { extraCanvas })\n  //         break\n\n  //       case \"snake\":\n  //         snake(sketch, {})\n  //         break\n  //       default:\n  //         break\n  //     }\n  //   }\n\n  //   sketch.windowResized = () => {\n  //     sketch.resizeCanvas(sketch.windowWidth, sketch.windowHeight)\n  //   }\n  // }\n\n  return (\n    <div>P5</div>\n    // <Layout>\n    //   <Radio.Group value={option} onChange={e => setOption(e.target.value)}>\n    //     {p5Options.map(opt => (\n    //       <Radio.Button key={opt} value={opt}>\n    //         {_capitalize(opt)}\n    //       </Radio.Button>\n    //     ))}\n    //   </Radio.Group>\n\n    //   <div ref={p5DivRef} />\n    // </Layout>\n  )\n}\n","var createCaseFirst = require('./_createCaseFirst');\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\n\n\nvar upperFirst = createCaseFirst('toUpperCase');\nmodule.exports = upperFirst;","var global = require('./_global');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar dP = require('./_object-dp').f;\nvar gOPN = require('./_object-gopn').f;\nvar isRegExp = require('./_is-regexp');\nvar $flags = require('./_flags');\nvar $RegExp = global.RegExp;\nvar Base = $RegExp;\nvar proto = $RegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n// \"new\" creates a new object, old webkit buggy here\nvar CORRECT_NEW = new $RegExp(re1) !== re1;\n\nif (require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function () {\n  re2[require('./_wks')('match')] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';\n}))) {\n  $RegExp = function RegExp(p, f) {\n    var tiRE = this instanceof $RegExp;\n    var piRE = isRegExp(p);\n    var fiU = f === undefined;\n    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p\n      : inheritIfRequired(CORRECT_NEW\n        ? new Base(piRE && !fiU ? p.source : p, f)\n        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)\n      , tiRE ? this : proto, $RegExp);\n  };\n  var proxy = function (key) {\n    key in $RegExp || dP($RegExp, key, {\n      configurable: true,\n      get: function () { return Base[key]; },\n      set: function (it) { Base[key] = it; }\n    });\n  };\n  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);\n  proto.constructor = $RegExp;\n  $RegExp.prototype = proto;\n  require('./_redefine')(global, 'RegExp', $RegExp);\n}\n\nrequire('./_set-species')('RegExp');\n","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","require(\"core-js/modules/es6.regexp.constructor\");\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = \"\\\\ud800-\\\\udfff\",\n    rsComboMarksRange = \"\\\\u0300-\\\\u036f\",\n    reComboHalfMarksRange = \"\\\\ufe20-\\\\ufe2f\",\n    rsComboSymbolsRange = \"\\\\u20d0-\\\\u20ff\",\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = \"\\\\ufe0e\\\\ufe0f\";\n/** Used to compose unicode capture groups. */\n\nvar rsZWJ = \"\\\\u200d\";\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + ']');\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\n\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;","var baseSlice = require('./_baseSlice');\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\n\n\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return !start && end >= length ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;","var g; // This works in non-strict mode\n\ng = function () {\n  return this;\n}();\n\ntry {\n  // This works if eval is allowed (see CSP)\n  g = g || new Function(\"return this\")();\n} catch (e) {\n  // This works if the window reference is available\n  if (typeof window === \"object\") g = window;\n} // g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\n\nmodule.exports = g;","require(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nvar Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;"],"sourceRoot":""}